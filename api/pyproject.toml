[tool.poetry]
authors = ["ckbuhl <ckbuhl@gmail.com>"]
description = ""
name = "api"
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
boto3 = "^1.34.16"
fastapi = "^0.108.0"
mangum = "^0.17.0"
pydantic = "^2.5.3"
python = "^3.12"
uvicorn = "^0.25.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
mypy-boto3 = "^1.34.16"
pre-commit = "^3.6.0"
pytest = "^7.4.4"
ruff = "^0.1.11"
boto3-stubs = "^1.34.16"

[tool.ruff]
extend-select = [
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "ERA", # flake8-eradicate/eradicate
  "PIE", # flake8-pie
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
  "TCH", # flake8-type-checking
  "N", # pep8-naming
  "RUF", # ruff checks
  "UP", # pyupgrade
  "I", # isort
  "PGH", # pygrep
]
fix = true
ignore = [
  "B904", # use 'raise ... from err'
  "B905", # use explicit 'strict=' parameter with 'zip()'
  "N818", #  Exception name should be named with an Error suffix
  "PGH003", # Use specific rule codes when ignoring type issues
  "ERA001", # Found commented out code
]
line-length = 88
target-version = "py311"
unfixable = [
  "ERA", # do not autoremove commented out code
  "ERA001", # do not autoremove commented out code
  "F401", # do not autoremove unused imports
]

[tool.ruff.isort]
force-single-line = true
lines-after-imports = 2
lines-between-types = 1
[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
